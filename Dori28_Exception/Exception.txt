예외처리
프로세스가 진행되는 도중 어떤 문제가 발생했을 때 문제를 처리하기 위해 진행을 멈추고 다른 작업을 수행할 수 있도록 하는 것이다.

예외처리 중복 확인
상속된 예외 처리 Class를 사용할 경우 가장 자식 Class부터 호출해서 사용해야 한다.
자식 Class의 예외를 먼저 확인하고 부모 Class의 예외를 확인하도록 호출한다.

- NullReferenceException
- OverflowException
- ArgumentException
- InvalidCastException
- FormatException
- ThreadInterruptedException
- SystemException
- Exception

try 
{
	실행 부분 (프로그램 실행 도중 예외가 발생할 경우 Catch로 보냄)
}

catch 
{
	예외가 발생했을 경우 수행하는 부분
}

finally 
{
	예외 발생과 상관없이 무조건 실행하는 부분
}

 Exception이 가장 최상단의 부모
 부모 Catch가 있을 경우 자식 Catch를 사용할 수 없다.
 (이미 부모가 모든 예외를 가지고 가기 때문이다.)